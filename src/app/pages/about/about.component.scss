@use "sass:map";
@use "../../../styles/_variables.scss" as vars;

/* ===== Aliases ===== */
$blue:       map.get(vars.$theme-colors, "light-blue");
$blue-hero:  #444798;
$red:        map.get(vars.$theme-colors, "light-red");
$grey-100:   map.get(vars.$theme-colors, "light-grey");
$white:      map.get(vars.$theme-colors, "white");

/* ========================= */
/* Pré-cachage local (NEWS)  */
/* ========================= */
.about-wrapper {
  .prehide {
    opacity: 0;
    visibility: hidden;
    transform: translateY(20px);
    will-change: transform, opacity;
  }
  .prehide-row {
    opacity: 0;
    visibility: hidden;
  }
}

/* ===== Wrapper/Section ===== */
.about-wrapper { width: 100%; }

.section {
  position: relative;
  isolation: isolate;
  --pad-y: clamp(48px, 7vw, 96px);

  .section-inner {
    position: relative;
    z-index: 1;
    width: 100%;
    margin-inline: auto;
    padding-inline: clamp(16px, 3vw, 40px);
    padding-block: var(--pad-y);
  }
}

/* ========================= */
/* CORE (titre + 2 colonnes) */
/* ========================= */
.block-title {
  color: $blue-hero;
  font-size: clamp(32px, 3.2vw, 60px);
  font-weight: map.get(vars.$font-weight, "regular");
  line-height: 1.1;
  margin: 0 0 38px;
}

.core-grid {
  --core-gap: clamp(48px, 8vw, 148px);
  --core-left-col: 55%;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "left"
    "right";
  row-gap: clamp(24px, 4vw, 40px);

  @media (min-width: 992px) {
    grid-template-columns:
      minmax(0, var(--core-left-col))
      minmax(0, calc(100% - var(--core-left-col)));
    grid-template-areas: "left right";
    column-gap: var(--core-gap);
  }
}

.core-left  { grid-area: left;  display: flex; flex-direction: column; }
.core-right { grid-area: right; display: flex; flex-direction: column; gap: clamp(10px, 2vw, 14px); align-items: flex-start; }

.block-html {
  color: $blue;
  font-size: map.get(vars.$font-size, "30"); /* 16px */
  line-height: 1.6;
  p { margin: 0 0 12px; }
  p:last-child { margin-bottom: 0; }
}

.panel-list.about-where-list {
  list-style: none; margin: 0; padding: 0;
  display: flex; flex-direction: column; gap: clamp(8px, 1.8vw, 12px);
}
.panel-list.about-where-list li {
  display: flex; align-items: center; gap: 10px;
  color: $blue-hero; font-size: 20px;

  /* 🔎 Hover doux UNIQUEMENT sur les items de lieux */
  transform-origin: left center;
  transition: transform .28s cubic-bezier(.22,.61,.36,1);
  will-change: transform;
}
.panel-list.about-where-list li::before {
  content: "—"; color: $red; font-size: 18px; margin-right: 6px;
}
.panel-list.about-where-list li:hover,
.panel-list.about-where-list li:focus-visible {
  transform: scale(1.04);
}



/* =====  Partenaires dans About ===== */
.core-block.core-right.partners {
  /* on veut que l’image touche le bas du core-block */
  padding: 0;                 /* <- on neutralise le padding du core-block */
  display: flex;              /* pour pouvoir étirer la carte sur toute la hauteur */
  flex-direction: column;
  gap: clamp(16px, 2.6vw, 24px);

  /* largeur colonne photo */
  --team-tile-w: 220px;       /* ajuste si besoin */

  /* petites flèches si tu les utilises */
  .partners-controls {
    position: absolute;
    top: 8px; right: 8px;
    display: flex; gap: 8px; z-index: 2;
    .ctrl {
      appearance: none; border: 0; border-radius: 999px;
      width: 32px; height: 32px; line-height: 32px;
      text-align: center; cursor: pointer;
      background: rgba(0,0,0,.06); color: #26336f;
      transition: background .2s ease, transform .15s ease;
      &:hover { background: rgba(0,0,0,.12); }
      &:active { transform: scale(.96); }
    }
  }

  /* La carte occupe 100% de la hauteur du core-block */
  .member-card {
    display: grid;
    grid-template-columns: var(--team-tile-w) 1fr;
    align-items: stretch;     /* la photo s’étire comme la colonne texte */
    column-gap: clamp(16px, 2vw, 20px);
    min-width: 0;
    flex: 1 1 auto;           /* <- occupe toute la hauteur disponible */
    /* on remet un padding interne à la carte (puisqu’on a enlevé celui du core-block) */
    padding: clamp(16px, 2vw, 24px);
    box-sizing: border-box;
  }

  .photo-tile {
    align-self: stretch;      /* s’aligne sur la hauteur de .member-card */
    width: var(--team-tile-w);
    height: 100%;             /* prend toute la hauteur disponible */
    display: grid;
    place-items: end center;
    overflow: hidden;
    background: #F1D2DB;
  }

  .photo-tile img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;        /* couvre toute la tuile */
  }

  .member-text {
    /* la hauteur de référence = celle de la carte, donc la photo suit */
    height: auto;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    gap: 6px;
  }

  .member-area {
    color: $red;
    font-family: "Plus Jakarta Sans", sans-serif;
    font-size: 18px;
    font-weight: 500;
    line-height: 1.2;
    margin-bottom: 6px;
  }
  .member-name .first,
  .member-name .last {
    color: $blue;
    font-family: "Plus Jakarta Sans", sans-serif;
    font-size: 18px;
    font-weight: 500;
    line-height: 1.3;
    margin: 0;
    white-space: nowrap;
  }
  .member-job {
    margin-top: auto;
    color: $blue;
    font-family: "Plus Jakarta Sans", sans-serif;
    font-size: map.get(vars.$font-size, "30"); /* ~16px */
    font-weight: map.get(vars.$font-weight, "regular");
    line-height: 1.2;
    p { margin: 0 0 2px 0; }
    p:last-child { margin-bottom: 0; }
  }
}

/* Effet hover léger */
.core-right.partners .member-card {
  transform-origin: left center;
  transition: transform .22s cubic-bezier(.22,.61,.36,1);
  will-change: transform;
  &:hover,
  &:focus-within { transform: scale(1.03); }
}

/* Mobile : photo un peu moins large */
@media (max-width: 720px) {
  .core-right.partners { --team-tile-w: 140px; }
}


/* ========================= */
/* MESH (maillage)          */
/* ========================= */
.mesh {
  .mesh-title {
    color: $blue;
    font-size: map.get(vars.$font-size, "80");
    font-weight: map.get(vars.$font-weight, "regular");
    line-height: normal;
    text-align: center;
    margin: 0;
  }

  .mesh-skyline {
    width: 100%;
    img { display: block; width: 100%; height: auto; margin-top: clamp(24px, 4vw, 40px); }
  }

  /* Trait animé + labels */
  .mesh-levels {
    --lineW: 0%; /* animé par GSAP -> 100% */
    position: relative;
    list-style: none;
    margin: clamp(18px, 3vw, 28px) 0 0;
    padding: 18px 0 0;
  }
  .mesh-levels::before {
    content: "";
    position: absolute;
    left: 0; top: 0;
    height: 2px;
    width: var(--lineW);
    background: $blue-hero;
  }
  .mesh-levels li {
    position: absolute;
    top: 18px;
    color: $blue-hero;
    font-size: 22px;
    text-transform: uppercase;
    white-space: nowrap;
  }
  .mesh-levels li:first-child { left: 0; }
  .mesh-levels li:nth-child(2) { left: 50%; transform: translateX(-50%); }
  .mesh-levels li:last-child { right: 0; }

  @media (max-width: 768px) {

    .mesh-title {
      font-size: map.get(vars.$font-size, "50");
    }

    .mesh-levels li {
      font-size: 14px;
    }
  }
}

/* ========================= */
/* MAP (Où ?)               */
/* ========================= */
.map-section {
  .map-grid {
    display: grid;
    gap: clamp(24px, 4vw, 48px);
    grid-template-columns: 1fr;

    @media (min-width: 768px) {
      grid-template-columns: 2fr 400px;
      column-gap: clamp(80px, 10vw, 140px);
      align-items: center; /* centre verticalement la colonne "Où ?" par rapport à la carte */
    }
  }

  /* Sécurité : si le parent change, on garde chaque colonne centrée */
  .map-image,
  .map-list {
    align-self: center;
  }

  .map-image img { display:block; width:100%; height:auto; }

  .map-title {
    color: $blue-hero;
    font-size: map.get(vars.$font-size, "100"); /* 48 */
    font-weight: map.get(vars.$font-weight, "regular");
    margin: 0 0 8px;
  }

  .map-list ul {
    list-style: none; margin: 0; padding: 0;
    display: flex; flex-direction: column; gap: clamp(8px, 1.6vw, 12px);
  }
  .map-list li {
    display: flex; align-items: center; gap: 10px;
    color: $blue-hero; font-size: 20px;

    /* 🔎 Hover doux UNIQUEMENT sur les items de lieux */
    transform-origin: left center;
    transition: transform .28s cubic-bezier(.22,.61,.36,1);
    will-change: transform;
  }
  .map-list li::before { content: "—"; color: $red; }
  .map-list li:hover,
  .map-list li:focus-visible {
    transform: scale(1.04);
  }

  @media (prefers-reduced-motion: reduce) {
    .map-list li {
      transition: none !important;
      transform: none !important;
    }
  }

  @media (max-width: 768px) {

    .map-title {
      font-size: 24px;
      font-style: normal;
      font-weight: 300;
      line-height: normal;
    }

    .map-list li {
      font-size: 18px;
    }
  }
}

/* ====== NOS VALEURS ====== */
.values {
  min-block-size: 506px;
  --pad-y: clamp(56px, 6vw, 80px);

  .section-inner {
    padding-block: var(--pad-y);
  }

  .values-bg {
    position: absolute;
    top: 0;
    bottom: 0;
    left: calc(-1 * var(--content-gutter));
    right: calc(-1 * var(--content-gutter));
    pointer-events: none;
    z-index: 0;
  }

  .values-bg .values-layer {
    position: absolute;
    inset: 0;
    background: $grey-100;
    opacity: 1;
  }

  .values-title {
    color: $blue-hero;
    font-weight: map.get(vars.$font-weight, "regular");
    text-align: center;
    font-size: clamp(28px, 3.2vw, 40px);
    line-height: 1.1;
    margin: 0 0 80px;
  }

  .values-grid {
    /* grille par défaut */
    display: grid;
    grid-template-columns: repeat(1, minmax(240px, 1fr));
    gap: clamp(28px, 4vw, 48px);
    justify-items: center;
    align-items: start;

    @media (min-width: 992px) {
      /* on expose le column-gap comme variable pour centrer le trait */
      --gap-x: clamp(80px, 10vw, 140px);
      grid-template-columns: repeat(3, 1fr);
      column-gap: var(--gap-x);
    }
  }

  .value-item {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    max-width: 360px;
  }

  .value-item .icon-wrap {
    display: grid;
    place-items: center;
    margin-bottom: clamp(16px, 2vw, 20px);
  }

  .value-item .icon-wrap img {
    display: block;
    max-width: clamp(84px, 7vw, 96px);
    max-height: clamp(84px, 7vw, 96px);
    height: auto;
    width: auto;
  }

  .value-item .value-name {
    color: $blue-hero;
    font-weight: map.get(vars.$font-weight, "regular");
    font-size: clamp(18px, 2.1vw, 22px);
    line-height: 1.25;
    margin: 0 0 clamp(10px, 1.6vw, 12px);
  }

  .value-item .value-desc {
    color: $blue;
    font-weight: map.get(vars.$font-weight, "regular");
    font-size: clamp(13px, 1.6vw, 14px);
    line-height: 1.55;
    max-width: 320px;
  }

  .value-item .value-desc p { margin: 0; }
  .value-item .value-desc p + p { margin-top: 6px; }

  /* Traits entre les cartes — conservés, mais désormais centrés dans le gap */
  .value-item .divider { display: none; }

  @media (min-width: 992px) {
    .value-item .divider {
      /* base identique */
      display: block;
      position: absolute;
      top: calc(clamp(84px, 7vw, 96px) / 2 + 10px);
      height: 2px;
      background: $blue-hero;
      opacity: .45;
      transform: translate(-50%, -50%); /* centré verticalement + on recentre l’élément */

      /* centrage HORIZONTAL dans la “zone violette” (le column-gap) :
         on place l’origine juste au milieu du gap, à mi-distance de l’item courant */
      left: calc(100% + (var(--gap-x, 0px) / 2));

      /* largeur du trait : ta largeur d’origine,
         mais tu peux la “clamp” pour ne pas dépasser le gap */
      --divider-w: clamp(64px, 7vw, 96px);
      width: min(var(--divider-w), max(48px, calc(var(--gap-x, 9999px) - 24px)));

      /* Accessoire */
      pointer-events: none;
    }
  }

  /* ===== Hooks d’animation (même logique que News) ===== */
  .values-title.prehide {
    opacity: 0;
    visibility: hidden;
    transform: translateY(20px);
    will-change: transform, opacity;
  }
  .value-item.prehide {
    opacity: 0;
    visibility: hidden;
    transform: translateY(20px);
    will-change: transform, opacity;
  }
  .value-item.is-animating .icon-wrap img { transform-origin: center; }

  @media (prefers-reduced-motion: reduce) {
    .values-title.prehide,
    .value-item.prehide {
      opacity: 1 !important;
      visibility: visible !important;
      transform: none !important;
      will-change: auto !important;
    }
  }
}

/* ========================= */
/* Affiliations / Déontologie*/
/* ========================= */
.affiliations, .deon {
  .aff-title, .deon-title {
    color: $blue;
    font-size: map.get(vars.$font-size, "80"); /* 36 */
    line-height: normal;
    margin-bottom: 58.5px;
  }

  .aff-list, .deon-list {
    list-style: none; margin: 0; padding: 0;
    border-top: map.get(vars.$border-size, "2") solid $blue-hero;
  }

  /* ===== Appartenance ===== */
  .aff-row {
    --row-h: 98px;
    --gap-x: 14px; /* petit espace entre logo et texte */
    display: grid;

    /* COLONNES : [logo] [texte] [chevron] */
    grid-template-columns: auto 1fr auto;
    align-items: center;
    column-gap: var(--gap-x);

    min-block-size: var(--row-h);
    padding-block: 0;
    border-bottom: map.get(vars.$border-size, "2") solid $blue-hero;
  }

  /* Les enfants de .aff-row (logo, nom, bouton) prennent les colonnes de la grille */
  .aff-line { display: contents; }

  /* LOGO collé à la marge gauche */
  .aff-logo {
    grid-column: 1;                /* colonne 1 = la plus à gauche */
    justify-self: start;
    width: 75px;
    height: 75px;
    min-width: 75px;               /* évite les compressions */
    object-fit: contain;
    object-position: center left;  /* visuel ancré à gauche */
    /* aucun padding/margin gauche pour être au bord de la section */
    margin-left: 0;
  }

  /* TEXTE dans la colonne 2 (pas centré) */
  .aff-name {
    grid-column: 2;
    color: $blue-hero;
    font-size: 18px;
    line-height: 1.3;
    font-weight: 600;
    text-align: left;

    .aff-abbr  { font-weight: map.get(vars.$font-weight, "600"); }
    .aff-label { font-weight: map.get(vars.$font-weight, "600"); }
  }

  /* CHEVRON complètement à droite */
  .aff-toggle {
    grid-column: 3;
    justify-self: end;
    background: none;
    border: 0;
    color: $blue-hero;
    cursor: pointer;

    .chevron { width: 24px; height: 34px; transform: rotate(90deg); transition: transform .25s ease; }
    &[aria-expanded='true'] .chevron { transform: rotate(0deg); }
  }

  /* DESCRIPTION sous le texte uniquement (colonne 2) */
  .aff-desc {
    grid-column: 2 / 3;           /* alignée sous le nom, pas sous le logo */
    padding: 8px 0 16px;
  }
  .aff-desc-inner {
    color: $blue;
    font-size: 16px !important;
    line-height: 1.55;

    p { margin: 0 0 8px; }
    p:last-child { margin-bottom: 0; }
  }

  /* ===== Déontologie (inchangé côté structure) ===== */
  .deon-row {
    --row-h: 98px;
    display: grid;
    grid-template-columns: 1fr auto; /* texte | chevron */
    align-items: center;
    column-gap: clamp(24px, 4vw, 48px);
    min-block-size: var(--row-h);
    padding-block: 0;
    border-bottom: map.get(vars.$border-size, "2") solid $blue-hero;
  }
  .deon-line { display: contents; }

  .deon-name {
    color: $blue-hero;
    font-size: 18px;
    line-height: 1.3;
    font-weight: 600;
    text-align: left;
  }

  .deon-toggle {
    grid-column: 2;
    justify-self: end;
    background: none;
    border: 0;
    color: $blue-hero;
    cursor: pointer;

    .chevron { width: 24px; height: 34px; transform: rotate(90deg); transition: transform .25s ease; }
    &[aria-expanded='true'] .chevron { transform: rotate(0deg); }
  }

  .deon-desc { grid-column: 1 / -1; padding: 8px 0 18px; }
  .deon-desc-inner {
    color: $blue;
    font-size: 16px !important;
    line-height: 1.55;

    p { margin: 0 0 8px; }
    p:last-child { margin-bottom: 0; }
  }

  /* Responsive : logo un peu plus petit */
  @media (max-width: 768px) {
    .aff-logo { width: 58px; height: 58px; min-width: 58px; }
    .aff-row  { --gap-x: 10px; }

    .aff-abbr {
      font-size: 18px;
      font-style: normal;
      font-weight: 500;
      line-height: 30px
    }

    .aff-title, .deon-title {
      font-size: 24px;
      font-style: normal;
      font-weight: 400;
      line-height: 30px
    }

    .aff-label, .deon-name {
      font-size: 14px;
      font-style: normal;
      font-weight: 500;
      line-height: 10px
    }
  }
}


/* ============================  TIMELINE ============================ */
.timeline {
  --years-col: 152px;
  --rail-w: 2px;
  --row-gap: 96px;
  --dash-w: 24px;
  --rail-gap: clamp(48px, 6vw, 110px);
  --content-max: 940px;
  position: relative;
  isolation: isolate;

  .timeline-bg {
    position: absolute;
    inset: 0;
    left: calc(-1 * var(--content-gutter));
    right: calc(-1 * var(--content-gutter));
    pointer-events: none;
    z-index: 0;
  }

  .timeline-bg .timeline-layer {
    position: absolute;
    inset: 0;
    background: $grey-100;
  }

  .section-inner {
    position: relative;
    z-index: 1;
  }

  .tl-grid {
    position: relative;
    display: grid;
    grid-template-columns: var(--years-col) 1fr;
    column-gap: var(--rail-gap);
    row-gap: var(--row-gap);
  }

  .tl-rail {
    position: absolute;
    top: 0;
    bottom: 0; /* ← couvre toute la hauteur du grid */
    left: calc(var(--years-col) + var(--rail-gap));
    width: var(--rail-w);
    background: $blue-hero;
    transform: scaleY(0);
    transform-origin: top;
  }

  .timeline-title {
    grid-column: 1 / -1;
    margin: 0 0 clamp(24px, 4vw, 40px);
    max-width: var(--content-max);
    margin-inline: auto;
    text-align: center;
    color: $blue-hero;
    font-weight: map.get(vars.$font-weight, "regular");
    font-size: clamp(24px, 3.2vw, 36px);
    line-height: 1.1;
  }

  .tl-year {
    justify-self: end;
    align-self: start;
    color: $blue-hero;
    font-size: clamp(18px, 3.2vw, 24px);
    font-weight: map.get(vars.$font-weight, "regular");
    line-height: 1;
    position: relative;
    text-align: right;
    white-space: nowrap;
    padding-right: calc(var(--rail-gap) + var(--rail-w));
    --dashNow: 0px; /* animé par GSAP 0 → var(--dash-w) */
  }

  .tl-year::after {
    content: "";
    position: absolute;
    top: .6em; /* repère pour la petite barre rouge */
    right: calc(var(--rail-gap) - var(--dash-w) - 6px);
    width: var(--dashNow);
    height: 2px;
    background: $red;
  }

  .tl-body {
    grid-column: 2;
    max-width: var(--content-max);
    width: 100%;
    justify-self: center;
    margin-inline: auto;
    padding-left: var(--rail-gap);
  }

  .tl-item-title {
    color: $blue-hero;
    font-weight: map.get(vars.$font-weight, "regular");
    font-size: clamp(18px, 2vw, 24px);
    line-height: 1.25;
    margin: 0 0 10px;
  }

  .tl-desc {
    color: $blue;
    font-weight: map.get(vars.$font-weight, "regular");
    font-size: map.get(vars.$font-size, "20");
    line-height: 1.55;
  }

  .tl-desc p { margin: 0; }
  .tl-desc p + p { margin-top: 6px; }

  @media (max-width: 768px) {
    --years-col: 110px;
    --row-gap: 64px;
    --rail-gap: clamp(28px, 8vw, 64px);
    --content-max: 92vw;

    .timeline-title {
      font-size: 20px;
      font-style: normal;
      font-weight: 400;
      line-height: normal;
      margin-bottom: 32px;
    }

    .tl-rail {
      top: 75px;
    }
  }
}


/* A11y helper */
.sr-only, .visually-hidden {
  position: absolute !important;
  width: 1px !important; height: 1px !important;
  padding: 0 !important; margin: -1px !important;
  overflow: hidden !important; clip: rect(0,0,0,0) !important;
  white-space: nowrap !important; border: 0 !important;
}

@media (prefers-reduced-motion: reduce) {
  .about-wrapper * {
    animation: none !important;
    transition: none !important;
    scroll-behavior: auto !important;
  }
}
